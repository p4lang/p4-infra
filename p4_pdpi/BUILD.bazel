# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

load("@com_github_p4lang_p4c//:bazel/p4_library.bzl", "p4_library")
load("@com_google_googleapis_imports//:imports.bzl", "cc_proto_library")
load("@com_google_gutil//gutil:diff_test.bzl", "cmd_diff_test", "diff_test")
load("@com_google_gutil//gutil/embed_data:build_defs.bzl", "cc_embed_data")
load("//p4_pdpi:pdgen.bzl", "p4_pd_proto")

package(
    default_visibility = ["//visibility:public"],
    licenses = ["notice"],
)

cc_library(
    name = "references",
    srcs = ["references.cc"],
    hdrs = ["references.h"],
    # Disable default arguments internally. Using them in PDPI itself is very likely a bug.
    local_defines = ["PDPI_DISABLE_TRANSLATION_OPTIONS_DEFAULT"],
    deps = [
        ":built_ins",
        ":ir_cc_proto",
        ":reference_annotations",
        "//string_encodings:byte_string",
        "@com_github_p4lang_p4runtime//:p4runtime_cc_proto",
        "@com_google_absl//absl/container:btree",
        "@com_google_absl//absl/container:flat_hash_map",
        "@com_google_absl//absl/container:flat_hash_set",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/strings:str_format",
        "@com_google_gutil//gutil:collections",
        "@com_google_gutil//gutil:proto",
        "@com_google_gutil//gutil:status",
        "@com_google_protobuf//:protobuf",
    ],
)

cc_test(
    name = "references_test",
    srcs = ["references_test.cc"],
    deps = [
        "references",
        "@com_google_absl//absl/hash:hash_testing",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "built_ins",
    srcs = [
        "built_ins.cc",
    ],
    hdrs = [
        "built_ins.h",
    ],
    deps = [
        ":ir_cc_proto",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/strings:string_view",
        "@com_google_gutil//gutil:status",
    ],
)

cc_test(
    name = "built_ins_test",
    srcs = [
        "built_ins_test.cc",
    ],
    deps = [
        ":built_ins",
        ":ir_cc_proto",
        "@com_google_googletest//:gtest_main",
        "@com_google_gutil//gutil:status_matchers",
    ],
)

cc_library(
    name = "reference_annotations",
    srcs = [
        "reference_annotations.cc",
    ],
    hdrs = [
        "reference_annotations.h",
    ],
    deps = [
        ":annotation_parser",
        ":built_ins",
        ":ir_cc_proto",
        "@com_github_p4lang_p4runtime//:p4info_cc_proto",
        "@com_google_absl//absl/container:btree",
        "@com_google_absl//absl/container:flat_hash_map",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/strings:string_view",
        "@com_google_gutil//gutil:collections",
        "@com_google_gutil//gutil:ordered_map",
        "@com_google_gutil//gutil:status",
        "@com_google_protobuf//:protobuf",
    ],
)

cc_library(
    name = "sequencing_util",
    srcs = ["sequencing_util.cc"],
    hdrs = ["sequencing_util.h"],
    # Disable default arguments internally. Using them in PDPI itself is very likely a bug.
    local_defines = ["PDPI_DISABLE_TRANSLATION_OPTIONS_DEFAULT"],
    deps = [
        ":ir_cc_proto",
        "@com_github_p4lang_p4runtime//:p4runtime_cc_proto",
        "@com_google_absl//absl/container:btree",
        "@com_google_absl//absl/container:flat_hash_map",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/strings:str_format",
        "@com_google_absl//absl/types:span",
        "@com_google_gutil//gutil:collections",
    ],
)

cc_test(
    name =
        "sequencing_util_test",
    srcs = ["sequencing_util_test.cc"],
    deps = [
        "sequencing_util",
        "@com_google_absl//absl/hash:hash_testing",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "sequencing",
    srcs = ["sequencing.cc"],
    hdrs = ["sequencing.h"],
    # Disable default arguments internally. Using them in PDPI itself is very likely a bug.
    local_defines = ["PDPI_DISABLE_TRANSLATION_OPTIONS_DEFAULT"],
    deps = [
        ":ir_cc_proto",
        ":names",
        ":references",
        ":sequencing_util",
        "@boost//:bimap",
        "@boost//:graph",
        "@com_github_grpc_grpc//:grpc++",
        "@com_github_p4lang_p4runtime//:p4info_cc_proto",
        "@com_github_p4lang_p4runtime//:p4runtime_cc_proto",
        "@com_google_absl//absl/algorithm:container",
        "@com_google_absl//absl/base:core_headers",
        "@com_google_absl//absl/container:flat_hash_map",
        "@com_google_absl//absl/container:flat_hash_set",
        "@com_google_absl//absl/functional:function_ref",
        "@com_google_absl//absl/log",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/types:span",
        "@com_google_gutil//gutil:collections",
        "@com_google_gutil//gutil:status",
        "@com_google_protobuf//:protobuf",
    ],
)

cc_library(
    name = "pd",
    srcs = ["pd.cc"],
    hdrs = ["pd.h"],
    # Disable default arguments internally. Using them in PDPI itself is very likely a bug.
    local_defines = ["PDPI_DISABLE_TRANSLATION_OPTIONS_DEFAULT"],
    deps = [
        ":ir",
        ":ir_cc_proto",
        ":ir_utils",
        ":translation_options",
        "//string_encodings:hex_string",
        "@com_github_grpc_grpc//:grpc++",
        "@com_github_p4lang_p4runtime//:p4info_cc_proto",
        "@com_github_p4lang_p4runtime//:p4runtime_cc_proto",
        "@com_google_absl//absl/container:flat_hash_map",
        "@com_google_absl//absl/container:flat_hash_set",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/types:span",
        "@com_google_googleapis//google/rpc:code_cc_proto",
        "@com_google_googleapis//google/rpc:status_cc_proto",
        "@com_google_gutil//gutil:collections",
        "@com_google_gutil//gutil:ordered_map",
        "@com_google_gutil//gutil:proto",
        "@com_google_gutil//gutil:status",
        "@com_google_protobuf//:protobuf",
    ],
)

cc_binary(
    name = "pdgen",
    srcs = ["pdgen.cc"],
    deps = [
        ":ir",
        ":ir_cc_proto",
        ":pdgenlib",
        "@com_github_p4lang_p4runtime//:p4info_cc_proto",
        "@com_google_absl//absl/flags:flag",
        "@com_google_absl//absl/flags:parse",
        "@com_google_absl//absl/flags:usage",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_gutil//gutil:proto",
        "@com_google_gutil//gutil:status",
    ],
)

cc_library(
    name = "pdgenlib",
    srcs = ["pdgenlib.cc"],
    hdrs = ["pdgenlib.h"],
    # Disable default arguments internally. Using them in PDPI itself is very likely a bug.
    local_defines = ["PDPI_DISABLE_TRANSLATION_OPTIONS_DEFAULT"],
    deps = [
        ":ir_cc_proto",
        ":pd",
        "@com_github_p4lang_p4runtime//:p4info_cc_proto",
        "@com_google_absl//absl/container:flat_hash_set",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_gutil//gutil:collections",
        "@com_google_gutil//gutil:ordered_map",
        "@com_google_gutil//gutil:status",
    ],
)

cc_library(
    name = "p4info_union_lib",
    srcs = ["p4info_union_lib.cc"],
    hdrs = ["p4info_union_lib.h"],
    # Disable default arguments internally. Using them in PDPI itself is very likely a bug.
    local_defines = ["PDPI_DISABLE_TRANSLATION_OPTIONS_DEFAULT"],
    deps = [
        "@com_github_p4lang_p4runtime//:p4info_cc_proto",
        "@com_github_p4lang_p4runtime//:p4types_cc_proto",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/types:optional",
        "@com_google_absl//absl/types:span",
        "@com_google_gutil//gutil:proto",
        "@com_google_protobuf//:protobuf",
    ],
)

cc_test(
    name = "p4info_union_test",
    srcs = ["p4info_union_test.cc"],
    deps = [
        ":p4info_union_lib",
        "@com_github_p4lang_p4runtime//:p4info_cc_proto",
        "@com_github_p4lang_p4runtime//:p4types_cc_proto",
        "@com_google_absl//absl/strings",
        "@com_google_googletest//:gtest_main",
        "@com_google_gutil//gutil:proto_matchers",
        "@com_google_gutil//gutil:status_matchers",
        "@com_google_gutil//gutil:testing",
    ],
)

cc_binary(
    name = "p4info_union",
    srcs = ["p4info_union.cc"],
    deps = [
        ":p4info_union_lib",
        "@com_github_p4lang_p4runtime//:p4info_cc_proto",
        "@com_google_absl//absl/flags:flag",
        "@com_google_absl//absl/flags:parse",
        "@com_google_absl//absl/flags:usage",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_gutil//gutil:proto",
    ],
)

cc_library(
    name = "ir",
    srcs = ["ir.cc"],
    hdrs = ["ir.h"],
    # Disable default arguments internally. Using them in PDPI itself is very likely a bug.
    local_defines = ["PDPI_DISABLE_TRANSLATION_OPTIONS_DEFAULT"],
    deps = [
        ":built_ins",
        ":ir_cc_proto",
        ":ir_utils",
        ":reference_annotations",
        ":translation_options",
        "@com_github_grpc_grpc//:grpc++",
        "@com_github_p4lang_p4runtime//:p4info_cc_proto",
        "@com_github_p4lang_p4runtime//:p4runtime_cc_proto",
        "@com_github_p4lang_p4runtime//:p4types_cc_proto",
        "@com_google_absl//absl/algorithm:container",
        "@com_google_absl//absl/base:core_headers",
        "@com_google_absl//absl/container:flat_hash_map",
        "@com_google_absl//absl/container:flat_hash_set",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/types:optional",
        "@com_google_absl//absl/types:span",
        "@com_google_googleapis//google/rpc:code_cc_proto",
        "@com_google_googleapis//google/rpc:status_cc_proto",
        "@com_google_gutil//gutil:collections",
        "@com_google_gutil//gutil:proto",
        "@com_google_gutil//gutil:status",
        "@com_google_protobuf//:protobuf",
    ],
)

cc_test(
    name = "ir_to_ir_test",
    srcs = ["ir_to_ir_test.cc"],
    deps = [
        ":ir",
        "@com_google_googletest//:gtest_main",
        "@com_google_gutil//gutil:proto_matchers",
        "@com_google_gutil//gutil:status_matchers",
        "@com_google_gutil//gutil:testing",
    ],
)

proto_library(
    name = "ir_proto",
    srcs = ["ir.proto"],
    deps = [
        "@com_github_p4lang_p4runtime//:p4info_proto",
        "@com_github_p4lang_p4runtime//:p4runtime_proto",
        "@com_google_googleapis//google/rpc:code_proto",
        "@com_google_googleapis//google/rpc:status_proto",
    ],
)

cc_library(
    name = "ir_utils",
    srcs = [
        "ir_utils.cc",
    ],
    hdrs = [
        "ir_utils.h",
    ],
    deps = [
        ":ir_cc_proto",
        ":translation_options",
        "//netaddr:ipv4_address",
        "//netaddr:ipv6_address",
        "//netaddr:mac_address",
        "//string_encodings:byte_string",
        "@com_github_p4lang_p4runtime//:p4info_cc_proto",
        "@com_github_p4lang_p4runtime//:p4runtime_cc_proto",
        "@com_github_p4lang_p4runtime//:p4types_cc_proto",
        "@com_google_absl//absl/algorithm:container",
        "@com_google_absl//absl/container:btree",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_googleapis//google/rpc:code_cc_proto",
        "@com_google_gutil//gutil:proto",
        "@com_google_gutil//gutil:status",
        "@com_google_protobuf//:protobuf",
        "@com_google_protobuf//third_party/utf8_range:utf8_validity",
    ],
)

cc_test(
    name = "ir_utils_test",
    srcs = ["ir_utils_test.cc"],
    deps = [
        ":ir_cc_proto",
        ":ir_utils",
        "//netaddr:ipv6_address",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_googletest//:gtest_main",
        "@com_google_gutil//gutil:proto",
        "@com_google_gutil//gutil:proto_matchers",
        "@com_google_gutil//gutil:status_matchers",
        "@com_google_protobuf//:protobuf",
    ],
)

cc_proto_library(
    name = "ir_cc_proto",
    deps = [":ir_proto"],
)

cc_library(
    name = "pi",
    srcs = ["pi.cc"],
    hdrs = ["pi.h"],
    # Disable default arguments internally. Using them in PDPI itself is very likely a bug.
    local_defines = ["PDPI_DISABLE_TRANSLATION_OPTIONS_DEFAULT"],
    deps = [
        ":ir_cc_proto",
        ":ir_utils",
        "@com_github_p4lang_p4runtime//:p4info_cc_proto",
        "@com_github_p4lang_p4runtime//:p4runtime_cc_proto",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_gutil//gutil:collections",
        "@com_google_gutil//gutil:status",
        "@com_google_protobuf//:protobuf",
    ],
)

cc_library(
    name = "ir_properties",
    srcs = ["ir_properties.cc"],
    hdrs = ["ir_properties.h"],
    deps = [
        ":ir_cc_proto",
        "@com_github_p4lang_p4runtime//:p4info_cc_proto",
    ],
)

cc_test(
    name = "ir_properties_test",
    srcs = ["ir_properties_test.cc"],
    deps = [
        ":ir_cc_proto",
        ":ir_properties",
        "@com_google_googletest//:gtest_main",
        "@com_google_gutil//gutil:testing",
    ],
)

cc_library(
    name = "ir_tools",
    srcs = ["ir_tools.cc"],
    hdrs = ["ir_tools.h"],
    # Disable default arguments internally. Using them in PDPI itself is very likely a bug.
    local_defines = ["PDPI_DISABLE_TRANSLATION_OPTIONS_DEFAULT"],
    deps = [
        ":ir_cc_proto",
        "@com_github_p4lang_p4runtime//:p4info_cc_proto",
        "@com_github_p4lang_p4runtime//:p4types_cc_proto",
        "@com_google_absl//absl/functional:any_invocable",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/types:variant",
        "@com_google_gutil//gutil:collections",
    ],
)

cc_test(
    name = "ir_tools_test",
    srcs = ["ir_tools_test.cc"],
    deps = [
        ":ir_cc_proto",
        ":ir_tools",
        ":main_p4_pd_cc_proto",
        ":pd",
        ":test_p4info_cc",
        "@com_github_p4lang_p4runtime//:p4types_cc_proto",
        "@com_google_absl//absl/container:flat_hash_set",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_googletest//:gtest_main",
        "@com_google_gutil//gutil:proto",
        "@com_google_gutil//gutil:proto_matchers",
        "@com_google_gutil//gutil:status_matchers",
        "@com_google_gutil//gutil:testing",
    ],
)

cc_library(
    name = "translation_options",
    hdrs = ["translation_options.h"],
    deps = ["@com_google_absl//absl/strings:str_format"],
)

cc_library(
    name = "annotation_parser",
    srcs = [
        "annotation_parser.cc",
    ],
    hdrs = [
        "annotation_parser.h",
    ],
    deps = [
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_gutil//gutil:status",
    ],
)

cc_test(
    name = "annotation_parser_test",
    srcs = ["annotation_parser_test.cc"],
    deps = [
        ":annotation_parser",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_googletest//:gtest_main",
        "@com_google_gutil//gutil:status_matchers",
    ],
)

cc_library(
    name = "entity_keys",
    srcs = ["entity_keys.cc"],
    hdrs = ["entity_keys.h"],
    deps = [
        "@com_github_p4lang_p4runtime//:p4runtime_cc_proto",
        "@com_google_absl//absl/hash",
        "@com_google_absl//absl/log:check",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/strings:str_format",
        "@com_google_gutil//gutil:status",
        "@com_google_protobuf//:protobuf",
    ],
)

cc_test(
    name = "entity_keys_test",
    srcs = ["entity_keys_test.cc"],
    deps = [
        ":entity_keys",
        "@com_google_absl//absl/hash:hash_testing",
        "@com_google_absl//absl/strings",
        "@com_google_googletest//:gtest_main",
        "@com_google_gutil//gutil:proto",
        "@com_google_gutil//gutil:status_matchers",
    ],
)

cc_library(
    name = "names",
    srcs = ["names.cc"],
    hdrs = ["names.h"],
    deps = [
        ":built_ins",
        ":ir_cc_proto",
        "@com_github_p4lang_p4runtime//:p4info_cc_proto",
        "@com_github_p4lang_p4runtime//:p4runtime_cc_proto",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_gutil//gutil:collections",
        "@com_google_gutil//gutil:status",
    ],
)

cc_test(
    name = "names_test",
    srcs = ["names_test.cc"],
    deps = [
        ":built_ins",
        ":ir_cc_proto",
        ":names",
        ":test_p4info_cc",
        "@com_github_p4lang_p4runtime//:p4runtime_cc_proto",
        "@com_google_googletest//:gtest_main",
        "@com_google_gutil//gutil:status_matchers",
        "@com_google_gutil//gutil:testing",
    ],
)

cc_test(
    name = "ternary_test",
    srcs = ["ternary_test.cc"],
    deps = [
        ":ternary",
        "//netaddr:ipv4_address",
        "//netaddr:ipv6_address",
        "//netaddr:mac_address",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "ternary",
    hdrs = ["ternary.h"],
    deps = [
        "//netaddr:ipv4_address",
        "//netaddr:ipv6_address",
        "//netaddr:mac_address",
    ],
)

p4_library(
    name = "main_p4info",
    src = ":main.p4",
    p4info_out = "main-p4info.pb.txt",
)

p4_pd_proto(
    name = "main_p4_pd",
    src = "main-p4info.pb.txt",
    out = "main_p4_pd.proto",
    format = False,
    package = "pdpi",
)

# This P4Info is to be used for tests that require PD fields that may not be
# present in the P4Info. In practice, this can happen if a unified P4Info
# consisting of P4Infos for different roles is used to translate entries
# to PD.
p4_library(
    name = "union_main_p4info",
    src = ":main.p4",
    extra_args = "-DPDPI_EXTRA_MATCH_FIELD",
    p4info_out = "union-main-p4info.pb.txt",
)

p4_pd_proto(
    name = "union_main_p4_pd",
    src = "union-main-p4info.pb.txt",
    out = "union_main_p4_pd.proto",
    format = False,
    package = "pdpi",
)

proto_library(
    name = "union_main_p4_pd_proto",
    srcs = ["union_main_p4_pd.proto"],
    deps = [
        "@com_github_p4lang_p4runtime//:p4runtime_proto",
        "@com_google_googleapis//google/rpc:code_proto",
        "@com_google_googleapis//google/rpc:status_proto",
    ],
)

cc_proto_library(
    name = "union_main_p4_pd_cc_proto",
    deps = [":union_main_p4_pd_proto"],
)

cc_library(
    name = "test_p4info_cc",
    srcs = ["test_p4info.cc"],
    hdrs = ["test_p4info.h"],
    deps = [
        ":ir",
        ":ir_cc_proto",
        ":test_p4info_embed",
        "@com_github_p4lang_p4runtime//:p4info_cc_proto",
        "@com_google_absl//absl/log:check",
        "@com_google_absl//absl/status:statusor",
        "@com_google_protobuf//:protobuf",
    ],
)

cc_embed_data(
    name = "test_p4info_embed",
    srcs = ["main-p4info.pb.txt"],
    cc_file_output = "test_p4info_embed.cc",
    cpp_namespace = "pdpi",
    h_file_output = "test_p4info_embed.h",
)

proto_library(
    name = "main_p4_pd_proto",
    srcs = ["main_p4_pd.proto"],
    deps = [
        "@com_github_p4lang_p4runtime//:p4runtime_proto",
        "@com_google_googleapis//google/rpc:code_proto",
        "@com_google_googleapis//google/rpc:status_proto",
    ],
)

cc_proto_library(
    name = "main_p4_pd_cc_proto",
    deps = [":main_p4_pd_proto"],
)

diff_test(
    name = "main_pd_diff_test",
    actual = "main_p4_pd.proto",
    expected = ":main_p4_pd.expected",
)

cc_library(
    name = "test_helper",
    testonly = True,
    hdrs = ["test_helper.h"],
    deps = [
        ":ir",
        ":ir_cc_proto",
        ":translation_options",
        "@com_google_absl//absl/functional:function_ref",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_gutil//gutil:proto",
        "@com_google_gutil//gutil:status",
        "@com_google_gutil//gutil:testing",
        "@com_google_protobuf//:protobuf",
    ],
)

cc_test(
    name = "sequencing_test_runner",
    srcs = ["sequencing_test_runner.cc"],
    args = ["$(location :main-p4info.pb.txt)"],
    data = ["main-p4info.pb.txt"],
    linkstatic = True,
    deps = [
        ":ir",
        ":ir_cc_proto",
        ":main_p4_pd_cc_proto",
        ":pd",
        ":sequencing",
        ":test_helper",
        "@com_github_p4lang_p4runtime//:p4info_cc_proto",
        "@com_github_p4lang_p4runtime//:p4runtime_cc_proto",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_googletest//:gtest",
        "@com_google_gutil//gutil:proto",
        "@com_google_gutil//gutil:status_matchers",
        "@com_google_gutil//gutil:testing",
    ],
)

cmd_diff_test(
    name = "sequencing_diff_test",
    actual_cmd = "$(execpath :sequencing_test_runner) $(location :main-p4info.pb.txt)",
    expected = "//p4_pdpi:sequencing.expected",
    tools = [
        "main-p4info.pb.txt",
        ":sequencing_test_runner",
    ],
)

cc_test(
    name = "sequencing_util_test_runner",
    srcs = ["sequencing_util_test_runner.cc"],
    linkstatic = True,
    deps = [
        ":ir_cc_proto",
        ":main_p4_pd_cc_proto",
        ":pd",
        ":sequencing_util",
        ":test_helper",
        ":test_p4info_cc",
        "@com_google_absl//absl/algorithm:container",
        "@com_google_absl//absl/container:btree",
        "@com_google_absl//absl/container:flat_hash_map",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_gutil//gutil:proto",
        "@com_google_gutil//gutil:testing",
    ],
)

cmd_diff_test(
    name = "sequencing_util_diff_test",
    actual_cmd = "$(execpath :sequencing_util_test_runner) ",
    expected = ":sequencing_util.expected",
    tools = [":sequencing_util_test_runner"],
)

cc_test(
    name = "references_test_runner",
    srcs = ["references_test_runner.cc"],
    linkstatic = True,
    deps = [
        ":ir_cc_proto",
        ":main_p4_pd_cc_proto",
        ":pd",
        ":references",
        ":test_helper",
        ":test_p4info_cc",
        "@com_github_p4lang_p4runtime//:p4runtime_cc_proto",
        "@com_google_absl//absl/container:btree",
        "@com_google_absl//absl/container:flat_hash_set",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_gutil//gutil:proto",
        "@com_google_gutil//gutil:status",
        "@com_google_gutil//gutil:testing",
    ],
)

cmd_diff_test(
    name = "references_diff_test",
    actual_cmd = "$(execpath :references_test_runner) ",
    expected = ":references.expected",
    tools = [":references_test_runner"],
)

cc_test(
    name = "p4info_test_runner",
    srcs = ["p4info_test_runner.cc"],
    args = ["$(location :main-p4info.pb.txt)"],
    data = ["main-p4info.pb.txt"],
    linkstatic = True,
    deps = [
        ":ir",
        ":ir_cc_proto",
        ":test_helper",
        "@com_github_p4lang_p4runtime//:p4info_cc_proto",
        "@com_google_absl//absl/algorithm:container",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_gutil//gutil:proto",
        "@com_google_gutil//gutil:status",
        "@com_google_gutil//gutil:testing",
    ],
)

cmd_diff_test(
    name = "p4info_diff_test",
    actual_cmd = "$(execpath :p4info_test_runner) $(location :main-p4info.pb.txt)",
    expected = ":p4info.expected",
    tools = [
        "main-p4info.pb.txt",
        ":p4info_test_runner",
    ],
)

cc_test(
    name = "rpc_test_runner",
    srcs = ["rpc_test_runner.cc"],
    args = ["$(location :main-p4info.pb.txt)"],
    data = ["main-p4info.pb.txt"],
    linkstatic = True,
    deps = [
        ":ir",
        ":ir_cc_proto",
        ":main_p4_pd_cc_proto",
        ":pd",
        ":test_helper",
        ":translation_options",
        "@com_github_grpc_grpc//:grpc++",
        "@com_github_p4lang_p4runtime//:p4info_cc_proto",
        "@com_github_p4lang_p4runtime//:p4runtime_cc_proto",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_googleapis//google/rpc:code_cc_proto",
        "@com_google_googleapis//google/rpc:status_cc_proto",
        "@com_google_gutil//gutil:proto",
        "@com_google_gutil//gutil:status",
        "@com_google_gutil//gutil:testing",
        "@com_google_protobuf//:protobuf",
    ],
)

cmd_diff_test(
    name = "rpc_diff_test",
    actual_cmd = "$(execpath :rpc_test_runner)  $(location :main-p4info.pb.txt)",
    expected = ":rpc.expected",
    tools = [
        "main-p4info.pb.txt",
        ":rpc_test_runner",
    ],
)

cc_test(
    name = "packet_io_test_runner",
    srcs = ["packet_io_test_runner.cc"],
    args = ["$(location :main-p4info.pb.txt)"],
    data = ["main-p4info.pb.txt"],
    linkstatic = True,
    deps = [
        ":ir",
        ":ir_cc_proto",
        ":main_p4_pd_cc_proto",
        ":pd",
        ":test_helper",
        ":translation_options",
        "@com_github_p4lang_p4runtime//:p4info_cc_proto",
        "@com_github_p4lang_p4runtime//:p4runtime_cc_proto",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_gutil//gutil:status",
        "@com_google_gutil//gutil:testing",
    ],
)

cmd_diff_test(
    name = "packet_io_diff_test",
    actual_cmd = "$(execpath :packet_io_test_runner) $(location :main-p4info.pb.txt)",
    expected = ":packet_io.expected",
    tools = [
        "main-p4info.pb.txt",
        ":packet_io_test_runner",
    ],
)

cc_test(
    name = "table_entry_test_runner",
    srcs = ["table_entry_test_runner.cc"],
    args = ["$(location :main-p4info.pb.txt)"],
    data = ["main-p4info.pb.txt"],
    linkstatic = True,
    deps = [
        ":ir",
        ":ir_cc_proto",
        ":pd",
        ":test_helper",
        ":translation_options",
        ":union_main_p4_pd_cc_proto",
        "@com_github_p4lang_p4runtime//:p4info_cc_proto",
        "@com_github_p4lang_p4runtime//:p4runtime_cc_proto",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_gutil//gutil:status",
        "@com_google_gutil//gutil:testing",
    ],
)

cmd_diff_test(
    name = "table_entry_diff_test",
    actual_cmd = "$(execpath :table_entry_test_runner) $(location :main-p4info.pb.txt)",
    expected = ":table_entry.expected",
    tools = [
        "main-p4info.pb.txt",
        ":table_entry_test_runner",
    ],
)

cc_test(
    name = "helper_function_test",
    srcs = ["helper_function_test.cc"],
    deps = [
        "main_p4_pd_cc_proto",
        ":pd",
        "@com_github_p4lang_p4runtime//:p4runtime_cc_proto",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_googleapis//google/rpc:code_cc_proto",
        "@com_google_googletest//:gtest_main",
        "@com_google_gutil//gutil:status",
        "@com_google_gutil//gutil:status_matchers",
        "@com_google_gutil//gutil:testing",
        "@com_google_protobuf//:protobuf",
    ],
)

cc_test(
    name = "table_entry_gunit_test",
    srcs = ["table_entry_gunit_test.cc"],
    deps = [
        ":ir",
        ":ir_cc_proto",
        ":main_p4_pd_cc_proto",
        ":pd",
        ":test_p4info_cc",
        ":translation_options",
        "@com_github_p4lang_p4runtime//:p4runtime_cc_proto",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/strings:str_format",
        "@com_google_googletest//:gtest_main",
        "@com_google_gutil//gutil:proto",
        "@com_google_gutil//gutil:proto_matchers",
        "@com_google_gutil//gutil:status",
        "@com_google_gutil//gutil:status_matchers",
    ],
)
